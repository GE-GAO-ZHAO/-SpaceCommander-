#!/usr/bin/env bash
# ~/.git_template.local/hooks/pre-commit
# format-objc-hook
# pre-commit hook to check if any unformatted Objective-C files would be committed. Fails the check if so, and provides instructions.
#
# Copyright 2015 Square, Inc

# Allows us to read user input below, assigns stdin to keyboard
exec < /dev/tty

IFS=$'\n'
export CDPATH=""
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
source "$DIR"/lib/common-lib.sh

# Don't do anything unless a .clang-format file exists
# [ -e ".clang-format" ] || exit 0

objc_files=$(objc_files_to_format "$1")
[ -z "$objc_files" ] && exit 0

function format_objc() {
  success=0
  for file in $objc_files; do
    difference=$("$DIR"/format-objc-file-dry-run.sh "$file" | diff "$file" - | wc -l)

    if [ $difference -gt 0 ]; then
        if [ $success -eq 0 ]; then
            echo -e "🚸 Format and stage individual files:"
        fi
    	# This is what the dev can run to fixup an individual file
    	echo "\"$DIR\"/format-objc-file.sh '$file' && git add '$file';"
    	success=1
    fi
  done
  if [ $success -gt 0 ]; then
      echo -e "🔴  是 否 自 动 格 式 化 代 码 并 commit ? (y / n):"
      read choice
      if [ $choice ] && [ $choice == y ]; then 
          ${DIR}/format-objc-files.sh -s
          success=0
      else 
          echo -e "\n🔴  您 提 交 的 代 码 风 格 不 符, 请 运 行 下 面 指 令 修 复.\n💔  或 是 您 可 以 使 用 git commit --no-verify 强 制 跳 过"
          echo -e "\n🚀  Format and stage all affected files:\n\t \"$DIR\"/format-objc-files.sh -s"
          success=1
      fi
  fi
  return $success
}
format_objc
success=$?
exit $success
